services:
    app:
        profiles:
            - prod
        platform: linux/amd64
        build:
            context: .
            dockerfile: Dockerfile
        image: softvence/softvence-api:latest
        container_name: softvence_api
        ports:
            - 5056:5056
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: always
        command: >
            sh -c "
                echo 'üèÅ Waiting for DB...';
                sleep 5;
                npx prisma migrate deploy;
                echo 'üöÄ Starting app...';
                npm run start:docker
            "
        networks:
            - softvence_networks

    db:
        image: postgres:17.6-alpine
        container_name: softvence_db
        restart: always
        profiles:
            - prod
            - dev
        environment:
            POSTGRES_USER: softvence_pg_user
            POSTGRES_PASSWORD: softvence_pg_user_pass
            POSTGRES_DB: softvence_pg_db
            POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
        volumes:
            - softvence_pg:/var/lib/postgresql/data
        ports:
            - 5434:5434
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "softvence_pg_user", "-d", "softvence_pg_db"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 15s
        networks:
            - softvence_networks
    redis:
        image: redis:7-alpine # Use Alpine version for smaller size
        container_name: softvence_redis
        restart: always
        profiles:
            - dev
            - prod
        ports:
            - 6373:6373
        volumes:
            - softvence_redis:/data
        # Add health check for Redis
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 5s
        networks:
            - softvence_networks

    caddy:
        image: caddy:latest
        profiles:
            - prod
        container_name: caddy_server
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - softvence_networks
volumes:
    softvence_pg:
    softvence_redis:

    caddy_data:
    caddy_config:

networks:
    softvence_networks:
        driver: bridge
